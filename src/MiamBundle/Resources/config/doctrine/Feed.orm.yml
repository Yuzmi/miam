MiamBundle\Entity\Feed:
    type: entity
    table: feed
    repositoryClass: MiamBundle\Repository\FeedRepository
    id:
        id:
            type: integer
            id: true
            generator:
                strategy: AUTO
    fields:
        name:
            type: string
            length: 100
            nullable: true
        customName:
            type: string
            column: name_custom
            length: 100
            nullable: true
        url:
            type: text
        hash:
            type: string
            length: 40
        iconUrl:
            type: text
            column: icon_url
            nullable: true
        website:
            type: text
            nullable: true
        isCatalog:
            type: boolean
            column: is_catalog
        hasIcon:
            type: boolean
            column: has_icon
        dataLength:
            type: integer
            column: data_length
        nbItems:
            type: integer
            column: nb_items_on_parsing
        nbErrors:
            type: integer
            column: nb_error_parsing
        dateCreated:
            type: datetime
            column: date_created
        dateParsed:
            type: datetime
            column: date_parsed
            nullable: true
        dateSuccess:
            type: datetime
            column: date_success
            nullable: true
        dateNewItem:
            type: datetime
            column: date_new_item
            nullable: true
        dateIcon:
            type: datetime
            column: date_icon
            nullable: true
    oneToMany:
        items:
            targetEntity: Item
            mappedBy: feed
            cascade: ["remove"]
        marks:
            targetEntity: FeedMark
            mappedBy: feed
            cascade: ["remove"]
        subscriptions:
            targetEntity: Subscription
            mappedBy: feed
            cascade: ["remove"]
    uniqueConstraints:
        hash_idx:
            columns: [ hash ]
    lifecycleCallbacks:
        preRemove: [ prepareIconRemoval ]
        postRemove: [ removeIcon ]